"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/emotion-cache-provider.tsx
var emotion_cache_provider_exports = {};
__export(emotion_cache_provider_exports, {
  CacheProvider: () => CacheProvider
});
module.exports = __toCommonJS(emotion_cache_provider_exports);
var import_react2 = require("@emotion/react");

// src/use-emotion-cache.ts
var import_cache = __toESM(require("@emotion/cache"));
var import_navigation = require("next/navigation");
var import_react = require("react");
var _a;
var createCache = (_a = import_cache.default.default) != null ? _a : import_cache.default;
function useEmotionCache(options) {
  const cache = (0, import_react.useMemo)(() => {
    const cache2 = createCache({ key: "css", prepend: true, ...options });
    cache2.compat = true;
    return cache2;
  }, [options]);
  (0, import_navigation.useServerInsertedHTML)(
    () => (0, import_react.createElement)("style", {
      key: cache.key,
      "data-emotion": `${cache.key} ${Object.keys(cache.inserted).join(" ")}`,
      dangerouslySetInnerHTML: {
        __html: Object.values(cache.inserted).join(" ")
      }
    })
  );
  return cache;
}

// src/emotion-cache-provider.tsx
var import_jsx_runtime = require("react/jsx-runtime");
"use client";
function CacheProvider({
  children,
  ...cacheOptions
}) {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react2.CacheProvider, { value: useEmotionCache(cacheOptions), children });
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CacheProvider
});
