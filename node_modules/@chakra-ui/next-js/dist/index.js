"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  CacheProvider: () => CacheProvider,
  Image: () => Image,
  Link: () => Link
});
module.exports = __toCommonJS(src_exports);

// src/emotion-cache-provider.tsx
var import_react2 = require("@emotion/react");

// src/use-emotion-cache.ts
var import_cache = __toESM(require("@emotion/cache"));
var import_navigation = require("next/navigation");
var import_react = require("react");
var _a;
var createCache = (_a = import_cache.default.default) != null ? _a : import_cache.default;
function useEmotionCache(options) {
  const cache = (0, import_react.useMemo)(() => {
    const cache2 = createCache({ key: "css", prepend: true, ...options });
    cache2.compat = true;
    return cache2;
  }, [options]);
  (0, import_navigation.useServerInsertedHTML)(
    () => (0, import_react.createElement)("style", {
      key: cache.key,
      "data-emotion": `${cache.key} ${Object.keys(cache.inserted).join(" ")}`,
      dangerouslySetInnerHTML: {
        __html: Object.values(cache.inserted).join(" ")
      }
    })
  );
  return cache;
}

// src/emotion-cache-provider.tsx
var import_jsx_runtime = require("react/jsx-runtime");
"use client";
function CacheProvider({
  children,
  ...cacheOptions
}) {
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react2.CacheProvider, { value: useEmotionCache(cacheOptions), children });
}

// src/link.tsx
var import_react3 = require("@chakra-ui/react");
var import_link = __toESM(require("next/link"));
var import_jsx_runtime2 = require("react/jsx-runtime");
var cx = (...classNames) => classNames.filter(Boolean).join(" ");
var Link = (0, import_react3.forwardRef)(function Link2(props, ref) {
  const styles = (0, import_react3.useStyleConfig)("Link", props);
  const { className, isExternal, href, children, ...rest } = (0, import_react3.omitThemingProps)(props);
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)(
    import_react3.chakra.a,
    {
      target: isExternal ? "_blank" : void 0,
      ref,
      href,
      ...rest,
      className: cx("chakra-link", className),
      __css: styles,
      as: import_link.default,
      children
    }
  );
});

// src/image.tsx
var import_react4 = require("@chakra-ui/react");
var import_image = __toESM(require("next/image"));
var Image = (0, import_react4.chakra)(import_image.default, {
  shouldForwardProp: (prop) => [
    "src",
    "alt",
    "width",
    "height",
    "fill",
    "loader",
    "quality",
    "priority",
    "loading",
    "placeholder",
    "blurDataURL",
    "unoptimized",
    "onLoadingComplete"
  ].includes(prop)
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  CacheProvider,
  Image,
  Link
});
